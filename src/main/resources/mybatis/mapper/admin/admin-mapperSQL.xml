<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="admin">
	<insert id="auctionInput" parameterType="auction">
		INSERT INTO AUCTION VALUES(AUCTION_SEQ.NEXTVAL,#{auctionStart},#{auctionEnd},#{auctionProduct},#{auctionPrice},#{auctionCount1},#{farmNo},#{auctionFormNo},#{farmNo2},#{farmNo3},#{auctionCount2},#{auctionCount3},#{auctionEndYN})
	</insert>
	<select id="auctionCheck" parameterType="integer" resultType="auction">
		select
			auction_no as auctionNo,
			auction_start as auctionStart,
			auction_end as auctionEnd,
			auction_product as auctionProduct,
			auction_Price as auctionPrice,
			auction_Count1 as auctionCount1,
			farm_No as farmNo,
			auction_Form_No as auctionFormNo,
			farm_No2 as farmNo2,
			farm_No3 as farmNo3,
			auction_Count2 as auctionCount2,
			auction_Count3 as auctionCount3,
			auction_EndYN as auctionEndYN
		from (select row_number() over (order by auction_no desc) as num, auction.* from auction 
		where auction_form_no=#{_parameter} and to_date(auction_end)>=to_date(sysdate))
		where num=1
	</select>
	<select id="BIDScheduler" parameterType="integer" resultType="auction">
		select auction_no as auctionNo,
			auction_start as auctionStart,
			auction_end as auctionEnd,
			auction_product as auctionProduct,
			auction_Price as auctionPrice,
			auction_Count1 as auctionCount1,
			farm_No as farmNo,
			auction_Form_No as auctionFormNo,
			farm_No2 as farmNo2,
			farm_No3 as farmNo3,
			auction_Count2 as auctionCount2,
			auction_Count3 as auctionCount3,
			auction_EndYN as auctionEndYN 
		from (select row_number() over (order by auction_no desc) as num, auction.* from auction 
		where auction_form_no=#{_parameter} and to_date(auction_end) &lt; to_date(sysdate) and auction_endYN='N') 
		where num = 1
	</select>
	<insert id="BIDinsert" parameterType="auction">
		insert into BID values(BID_SEQ.NEXTVAL,#{auctionNo},sysdate,'N')
	</insert>
	<update id="auctionEndYN" parameterType="auction">
		update auction set auction_endyn='Y' where to_date(auction_end) &lt; to_date(sysdate)
	</update>
	<select id="BIDList" parameterType="map" resultType="bid">
		select 
			bid_no as BIDNo,
			auction_no as auctionNo,
			bid_date as BIDDate,
			bid_sell_yn as BIDSellYN
		from (select row_number() over (order by bid_no desc) as num, bid.* from bid)
		where num between #{start} and #{end}
	</select>
	<select id="BIDTotalCount" resultType="int">
		select count(*) from bid
	</select>
	<select id="selectOneAuction" parameterType="integer" resultType="auction">
		select
			auction_no as auctionNo,
			auction_start as auctionStart,
			auction_end as auctionEnd,
			auction_product as auctionProduct,
			auction_Price as auctionPrice,
			auction_Count1 as auctionCount1,
			farm_No as farmNo,
			auction_Form_No as auctionFormNo,
			farm_No2 as farmNo2,
			farm_No3 as farmNo3,
			auction_Count2 as auctionCount2,
			auction_Count3 as auctionCount3,
			auction_EndYN as auctionEndYN
		from auction where auction_no=#{_parameter}
	</select>
	<insert id="sellInput" parameterType="sellForm">
		insert into sell_form values(sell_form_seq.nextval,#{sellStart},#{sellEnd},#{auctionNo},#{sellFormNo},#{boardNo},#{sellEndYN})
	</insert>
	<update id="BIDEndYNUpdate" parameterType="integer">
		update BID set bid_sell_yn='Y' where auction_no=#{_parameter}
	</update>
	<select id="sellFormCheck" parameterType="integer" resultType="sellForm">
		select
			sell_no as sellNo,
			sell_start as sellStart,
			sell_end as sellEnd,
			auction_no as auctionNo,
			sell_form_no as sellFormNo,
			board_no as boardNo,
			sell_end_yn as sellEndYN
		from sell_form where sell_form_no=#{_parameter} and to_date(sell_end) >= to_date(sysdate) and sell_end_yn='N'
	</select>
	<update id="sellUpdate" parameterType="sellForm">
		update sell_form set sell_start=#{sellStart}, sell_end=#{sellEnd}, board_no=#{boardNo}, sell_end_yn=#{sellEndYN}
		where auction_no=#{auctionNo} and sell_form_no=#{sellFormNo}
	</update>
	<update id="sellFormEndYN">
		update sell_form set sell_end_yn='Y' where to_date(sell_end) &lt; to_date(sysdate)
	</update>
	<select id="countCheck" resultType="count">
		select
			count_no as countNo,
			count_sum as countSum,
			count_date as countDate
		from count
		where to_date(count_date) = to_date(sysdate) 
	</select>
	<insert id="countInsert">
		insert into count values(count_seq.nextval,1,sysdate)
	</insert>
	<update id="countUpdate">
		update count set count_sum=(count_sum+1) where to_date(count_date)=to_date(sysdate)
	</update>
	<select id="countOutput" parameterType="integer" resultType="count">
		select
			count_no as countNo,
			count_sum as countSum,
			count_date as countDate
		from count
		where to_date(count_date) = to_date(sysdate-#{_parameter}) 
	</select>
	<select id="joinOutput" parameterType="integer" resultType="integer">
		select
			count(*)
		from member
		where to_date(user_enrolldate) = to_date(sysdate-#{_parameter})
	</select>
	<select id="farmOutput" parameterType="integer" resultType="integer">
		select
			count(*)
		from farm
		where to_date(farm_enrolldate) = to_date(sysdate-#{_parameter})
	</select>
	<select id="questionUserList" resultType="">
		
	</select>
</mapper>
